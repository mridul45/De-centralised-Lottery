{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/hp/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "1": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        86
      ]
    },
    "id": 87,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "absolutePath": "C:/Users/hp/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 87,
        "sourceUnit": 133,
        "src": "55:76:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 86,
        "linearizedBaseContracts": [
          86
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 5,
            "mutability": "mutable",
            "name": "players",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 86,
            "src": "156:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "156:15:1",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 4,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "156:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ab139a",
            "id": 7,
            "mutability": "mutable",
            "name": "usdEntryFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 86,
            "src": "194:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 86,
            "src": "226:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$132",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 8,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 132,
              "src": "226:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$132",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "325:112:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14,
                      "name": "usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "335:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3530",
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "349:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 18,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 16,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "355:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 17,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "359:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "355:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 19,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "354:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "349:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      }
                    },
                    "src": "335:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "335:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "372:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$132",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 25,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "412:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "390:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$132_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "390:40:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$132",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "372:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$132",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "372:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 30,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 30,
                  "src": "291:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "290:27:1"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:0:1"
            },
            "scope": 86,
            "src": "279:158:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "475:41:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "498:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "498:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "485:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "485:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "485:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "485:24:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e97dcb62",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:2:1"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:1"
            },
            "scope": 86,
            "src": "443:73:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "578:324:1",
              "statements": [
                {
                  "assignments": [
                    null,
                    47,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 47,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 76,
                      "src": "591:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 46,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "591:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 51,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "613:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$132",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "613:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "613:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "588:58:1"
                },
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 76,
                      "src": "656:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "656:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 62,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "688:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "680:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "680:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "697:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "701:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "697:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "680:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "656:47:1"
                },
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "mutability": "mutable",
                      "name": "costToEnter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 76,
                      "src": "807:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "807:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 73,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 65,
                            "name": "usdEntryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "830:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "844:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "848:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "844:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "830:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 70,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "829:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 71,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "854:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "829:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "807:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64,
                    "src": "884:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45,
                  "id": 75,
                  "nodeType": "Return",
                  "src": "877:18:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "09bc33a7",
            "id": 77,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:1"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "569:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:9:1"
            },
            "scope": 86,
            "src": "522:380:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "939:2:1",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "160344e2",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:2:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "939:0:1"
            },
            "scope": 86,
            "src": "908:33:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "976:2:1",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "1593a8c7",
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "966:2:1"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:0:1"
            },
            "scope": 86,
            "src": "947:31:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 87,
        "src": "133:847:1"
      }
    ],
    "src": "31:950:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516102bf3803806102bf8339818101604052602081101561003357600080fd5b50516802b5e3af16b1880000600155600280546001600160a01b0319166001600160a01b0390921691909117905561024f806100706000396000f3fe6080604052600436106100555760003560e01c806309bc33a71461005a5780631593a8c714610081578063160344e21461008157806388ab139a14610098578063e97dcb62146100ad578063f71d96cb146100b5575b600080fd5b34801561006657600080fd5b5061006f6100fb565b60408051918252519081900360200190f35b34801561008d57600080fd5b506100966101a9565b005b3480156100a457600080fd5b5061006f6101ab565b6100966101b1565b3480156100c157600080fd5b506100df600480360360208110156100d857600080fd5b50356101f2565b604080516001600160a01b039092168252519081900360200190f35b600080600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b505050506040513d60a081101561017657600080fd5b50602001516001549091506402540be4008202906000908290670de0b6b3a764000002816101a057fe5b04935050505090565b565b60015481565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b03191633179055565b600081815481106101ff57fe5b6000918252602090912001546001600160a01b031690508156fea2646970667358221220754a14f9903f4e5788dac6e2ba2e0255e4849e77f907ec76d24f0010fe18dc7664736f6c634300060c0033",
  "bytecodeSha1": "1cff75fe94e2ff7aec2c2c65df745b0f23699264",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {}
    },
    "statements": {
      "0": {},
      "1": {
        "Lottery.enter": {
          "0": [
            485,
            509
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface"
  ],
  "deployedBytecode": "6080604052600436106100555760003560e01c806309bc33a71461005a5780631593a8c714610081578063160344e21461008157806388ab139a14610098578063e97dcb62146100ad578063f71d96cb146100b5575b600080fd5b34801561006657600080fd5b5061006f6100fb565b60408051918252519081900360200190f35b34801561008d57600080fd5b506100966101a9565b005b3480156100a457600080fd5b5061006f6101ab565b6100966101b1565b3480156100c157600080fd5b506100df600480360360208110156100d857600080fd5b50356101f2565b604080516001600160a01b039092168252519081900360200190f35b600080600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b505050506040513d60a081101561017657600080fd5b50602001516001549091506402540be4008202906000908290670de0b6b3a764000002816101a057fe5b04935050505090565b565b60015481565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b03191633179055565b600081815481106101ff57fe5b6000918252602090912001546001600160a01b031690508156fea2646970667358221220754a14f9903f4e5788dac6e2ba2e0255e4849e77f907ec76d24f0010fe18dc7664736f6c634300060c0033",
  "deployedSourceMap": "133:847:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:380;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;947:31;;;;;;;;;;;;;:::i;:::-;;194:26;;;;;;;;;;;;;:::i;443:73::-;;;:::i;156:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:32:1;;:::i;:::-;;;;-1:-1:-1;;;;;156:32:1;;;;;;;;;;;;;;522:380;569:7;591:12;613:15;;;;;;;;;-1:-1:-1;;;;;613:15:1;-1:-1:-1;;;;;613:31:1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;613:33:1;;;830:11;;613:33;;-1:-1:-1;697:6:1;680:23;;;656:21;;680:23;;844:6;830:20;680:23;829:38;;;;;;-1:-1:-1;;;;522:380:1;:::o;947:31::-;:::o;194:26::-;;;;:::o;443:73::-;485:7;:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;485:24:1;498:10;485:24;;;443:73::o;156:32::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;156:32:1;;-1:-1:-1;156:32:1;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    133,
    980
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1593A8C7 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0xB5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x96 PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x96 PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x160 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH5 0x2540BE400 DUP3 MUL SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x1A0 JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x4A14F9903F4E5788DAC6E2BA2E0255E4849E77F907EC PUSH23 0xD24F0010FE18DC7664736F6C634300060C003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        133,
        980
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9BC33A7"
    },
    "25": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "EQ",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1593A8C7"
    },
    "36": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81"
    },
    "40": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x160344E2"
    },
    "47": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81"
    },
    "51": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x88AB139A"
    },
    "58": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98"
    },
    "62": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE97DCB62"
    },
    "69": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD"
    },
    "73": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF71D96CB"
    },
    "80": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5"
    },
    "84": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "DUP1",
      "path": "1"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        133,
        980
      ],
      "op": "REVERT",
      "path": "1"
    },
    "90": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "91": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "92": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "DUP1",
      "path": "1"
    },
    "93": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "94": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "97": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "POP",
      "path": "1"
    },
    "104": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F"
    },
    "107": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFB"
    },
    "110": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        522,
        902
      ],
      "op": "JUMP",
      "path": "1"
    },
    "111": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "112": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "114": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "116": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "117": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "DUP3",
      "path": "1"
    },
    "118": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "119": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "120": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "121": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "DUP2",
      "path": "1"
    },
    "122": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "123": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "SUB",
      "path": "1"
    },
    "124": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "126": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "ADD",
      "path": "1"
    },
    "127": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "128": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "RETURN",
      "path": "1"
    },
    "129": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "130": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "131": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "DUP1",
      "path": "1"
    },
    "132": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "133": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D"
    },
    "136": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "137": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "139": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "DUP1",
      "path": "1"
    },
    "140": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "REVERT",
      "path": "1"
    },
    "141": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "142": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "POP",
      "path": "1"
    },
    "143": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "146": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A9"
    },
    "149": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        947,
        978
      ],
      "op": "JUMP",
      "path": "1"
    },
    "150": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "151": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "STOP",
      "path": "1"
    },
    "152": {
      "offset": [
        194,
        220
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "153": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "154": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "155": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "156": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4"
    },
    "159": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "160": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "162": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "163": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "REVERT",
      "path": "1"
    },
    "164": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "165": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "POP",
      "path": "1"
    },
    "166": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F"
    },
    "169": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "172": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        194,
        220
      ],
      "op": "JUMP",
      "path": "1"
    },
    "173": {
      "fn": "Lottery.enter",
      "offset": [
        443,
        516
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "174": {
      "fn": "Lottery.enter",
      "offset": [
        443,
        516
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "177": {
      "fn": "Lottery.enter",
      "offset": [
        443,
        516
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "180": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        443,
        516
      ],
      "op": "JUMP",
      "path": "1"
    },
    "181": {
      "offset": [
        156,
        188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "182": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "183": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "185": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC1"
    },
    "188": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "189": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "191": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "192": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "REVERT",
      "path": "1"
    },
    "193": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "194": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "POP",
      "path": "1"
    },
    "195": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "198": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "200": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "201": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "202": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SUB",
      "path": "1"
    },
    "203": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "205": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "206": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "LT",
      "path": "1"
    },
    "207": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "208": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8"
    },
    "211": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "212": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "214": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "215": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "REVERT",
      "path": "1"
    },
    "216": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "217": {
      "op": "POP"
    },
    "218": {
      "offset": [
        156,
        188
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "219": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F2"
    },
    "222": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        156,
        188
      ],
      "op": "JUMP",
      "path": "1"
    },
    "223": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "224": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "226": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "227": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "234": {
      "op": "SHL"
    },
    "235": {
      "op": "SUB"
    },
    "236": {
      "offset": [
        156,
        188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "237": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "238": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "AND",
      "path": "1"
    },
    "239": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP3",
      "path": "1"
    },
    "240": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "241": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "242": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "243": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "244": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "245": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SUB",
      "path": "1"
    },
    "246": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "248": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "ADD",
      "path": "1"
    },
    "249": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "250": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "RETURN",
      "path": "1"
    },
    "251": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "252": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        569,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "254": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        591,
        603
      ],
      "op": "DUP1",
      "path": "1"
    },
    "255": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "257": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "259": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "260": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "261": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "262": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "265": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "EXP",
      "path": "1"
    },
    "266": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "267": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "DIV",
      "path": "1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "op": "SUB"
    },
    "276": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        628
      ],
      "op": "AND",
      "path": "1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        644
      ],
      "op": "AND",
      "path": "1"
    },
    "286": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        644
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFEAF968C"
    },
    "291": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "293": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "294": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP2",
      "path": "1"
    },
    "295": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "300": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "AND",
      "path": "1"
    },
    "301": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "303": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "SHL",
      "path": "1"
    },
    "304": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP2",
      "path": "1"
    },
    "305": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "306": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "308": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "ADD",
      "path": "1"
    },
    "309": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "311": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "313": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "314": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP1",
      "path": "1"
    },
    "315": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP4",
      "path": "1"
    },
    "316": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "SUB",
      "path": "1"
    },
    "317": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP2",
      "path": "1"
    },
    "318": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP7",
      "path": "1"
    },
    "319": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP1",
      "path": "1"
    },
    "320": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "321": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "322": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP1",
      "path": "1"
    },
    "323": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "324": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C"
    },
    "327": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "328": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "330": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP1",
      "path": "1"
    },
    "331": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "REVERT",
      "path": "1"
    },
    "332": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "333": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "POP",
      "path": "1"
    },
    "334": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "GAS",
      "path": "1"
    },
    "335": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "336": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "337": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP1",
      "path": "1"
    },
    "338": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "339": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x160"
    },
    "342": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "343": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "344": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "346": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP1",
      "path": "1"
    },
    "347": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "348": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "349": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "351": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "REVERT",
      "path": "1"
    },
    "352": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "353": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "POP",
      "path": "1"
    },
    "354": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "POP",
      "path": "1"
    },
    "355": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "POP",
      "path": "1"
    },
    "356": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "POP",
      "path": "1"
    },
    "357": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "359": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "360": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "361": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "363": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP2",
      "path": "1"
    },
    "364": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "LT",
      "path": "1"
    },
    "365": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "366": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x176"
    },
    "369": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "370": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "372": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "DUP1",
      "path": "1"
    },
    "373": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "REVERT",
      "path": "1"
    },
    "374": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "375": {
      "op": "POP"
    },
    "376": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "378": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "ADD",
      "path": "1"
    },
    "379": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "380": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        830,
        841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "382": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        830,
        841
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "383": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "384": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        613,
        646
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        697,
        703
      ],
      "op": "PUSH5",
      "path": "1",
      "value": "0x2540BE400"
    },
    "392": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        680,
        703
      ],
      "op": "DUP3",
      "path": "1"
    },
    "393": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        680,
        703
      ],
      "op": "MUL",
      "path": "1"
    },
    "394": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        680,
        703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "395": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        656,
        677
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "397": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        656,
        677
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "398": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        680,
        703
      ],
      "op": "DUP3",
      "path": "1"
    },
    "399": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        680,
        703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "400": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        844,
        850
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "409": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        830,
        850
      ],
      "op": "MUL",
      "path": "1"
    },
    "410": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        680,
        703
      ],
      "op": "DUP2",
      "path": "1"
    },
    "411": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        829,
        867
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0"
    },
    "414": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        829,
        867
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "415": {
      "dev": "Division by zero",
      "fn": "Lottery.getEntranceFee",
      "offset": [
        829,
        867
      ],
      "op": "INVALID",
      "path": "1"
    },
    "416": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        829,
        867
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "417": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        829,
        867
      ],
      "op": "DIV",
      "path": "1"
    },
    "418": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        829,
        867
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "419": {
      "op": "POP"
    },
    "420": {
      "op": "POP"
    },
    "421": {
      "op": "POP"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        522,
        902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "424": {
      "fn": "Lottery.getEntranceFee",
      "jump": "o",
      "offset": [
        522,
        902
      ],
      "op": "JUMP",
      "path": "1"
    },
    "425": {
      "fn": "Lottery.endLottery",
      "offset": [
        947,
        978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "426": {
      "fn": "Lottery.endLottery",
      "jump": "o",
      "offset": [
        947,
        978
      ],
      "op": "JUMP",
      "path": "1"
    },
    "427": {
      "offset": [
        194,
        220
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "430": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "431": {
      "fn": "Lottery.endLottery",
      "offset": [
        194,
        220
      ],
      "op": "DUP2",
      "path": "1"
    },
    "432": {
      "fn": "Lottery.endLottery",
      "jump": "o",
      "offset": [
        194,
        220
      ],
      "op": "JUMP",
      "path": "1"
    },
    "433": {
      "fn": "Lottery.enter",
      "offset": [
        443,
        516
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "434": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        492
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x0"
    },
    "436": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "437": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "438": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "440": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "441": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "ADD",
      "path": "1"
    },
    "442": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "DUP3",
      "path": "1"
    },
    "443": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "444": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "445": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "446": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "447": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
    },
    "480": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "ADD",
      "path": "1"
    },
    "481": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "482": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "489": {
      "op": "SHL"
    },
    "490": {
      "op": "SUB"
    },
    "491": {
      "op": "NOT"
    },
    "492": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "AND",
      "path": "1"
    },
    "493": {
      "fn": "Lottery.enter",
      "offset": [
        498,
        508
      ],
      "op": "CALLER",
      "path": "1"
    },
    "494": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "OR",
      "path": "1"
    },
    "495": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "496": {
      "fn": "Lottery.enter",
      "offset": [
        485,
        509
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "497": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        443,
        516
      ],
      "op": "JUMP",
      "path": "1"
    },
    "498": {
      "offset": [
        156,
        188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "499": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "501": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "502": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "503": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "504": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "505": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "LT",
      "path": "1"
    },
    "506": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FF"
    },
    "509": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "510": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "INVALID",
      "path": "1"
    },
    "511": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "512": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "514": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "515": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "DUP3",
      "path": "1"
    },
    "516": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "517": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "519": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "520": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "521": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "522": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "ADD",
      "path": "1"
    },
    "523": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "offset": [
        156,
        188
      ],
      "op": "AND",
      "path": "1"
    },
    "533": {
      "fn": "Lottery.enter",
      "offset": [
        156,
        188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "534": {
      "op": "POP"
    },
    "535": {
      "offset": [
        156,
        188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "536": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        156,
        188
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "177dc4c14a182a2385666ca5e08e4effaf605177",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\n\ncontract Lottery {\n    address payable[] public players;\n    uint256 public usdEntryFee;\n    AggregatorV3Interface internal ethUsdPriceFeed;\n\n    constructor(address _priceFeedAddress) public {\n        usdEntryFee = 50 * (10**18);\n        ethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress);\n    }\n\n    function enter() public payable {\n        players.push(msg.sender);\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData();\n        uint256 adjustedPrice = uint256(price) * 10**10; // 18 decimals\n        // $50, $2,000 / ETH\n        // 50/2,000\n        // 50 * 100000 / 2000\n        uint256 costToEnter = (usdEntryFee * 10**18) / adjustedPrice;\n        return costToEnter;\n    }\n\n    function startLottery() public {}\n\n    function endLottery() public {}\n}\n",
  "sourceMap": "133:847:1:-:0;;;279:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;279:158:1;349:13;335:11;:27;372:15;:58;;-1:-1:-1;;;;;;372:58:1;-1:-1:-1;;;;;372:58:1;;;;;;;;;133:847;;;-1:-1:-1;133:847:1;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}