{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lottery_state",
      "outputs": [
        {
          "internalType": "enum Lottery.LOTTERY_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/hp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "1": "C:/Users/hp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "2": "C:/Users/hp/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "3": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        131
      ]
    },
    "id": 132,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:3"
      },
      {
        "absolutePath": "C:/Users/hp/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 288,
        "src": "55:76:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/hp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 242,
        "src": "132:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 241,
              "src": "206:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$241",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "206:7:3"
          }
        ],
        "contractDependencies": [
          241,
          310
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 131,
        "linearizedBaseContracts": [
          131,
          241,
          310
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 8,
            "mutability": "mutable",
            "name": "players",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 131,
            "src": "220:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "220:15:3",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "220:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ab139a",
            "id": 10,
            "mutability": "mutable",
            "name": "usdEntryFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 131,
            "src": "258:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 131,
            "src": "290:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 11,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 287,
              "src": "290:21:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Lottery.LOTTERY_STATE",
            "id": 16,
            "members": [
              {
                "id": 13,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "371:4:3"
              },
              {
                "id": 14,
                "name": "CLOSED",
                "nodeType": "EnumValue",
                "src": "385:6:3"
              },
              {
                "id": 15,
                "name": "CALCULATING_WINNER",
                "nodeType": "EnumValue",
                "src": "401:18:3"
              }
            ],
            "name": "LOTTERY_STATE",
            "nodeType": "EnumDefinition",
            "src": "342:83:3"
          },
          {
            "constant": false,
            "functionSelector": "81447999",
            "id": 18,
            "mutability": "mutable",
            "name": "lottery_state",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 131,
            "src": "431:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
              "typeString": "enum Lottery.LOTTERY_STATE"
            },
            "typeName": {
              "contractScope": null,
              "id": 17,
              "name": "LOTTERY_STATE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16,
              "src": "431:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                "typeString": "enum Lottery.LOTTERY_STATE"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "518:158:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "528:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3530",
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 25,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "548:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "552:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "548:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 28,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "547:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "542:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      }
                    },
                    "src": "528:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "528:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "565:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "605:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "583:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$287_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "583:40:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "565:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "565:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "633:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "649:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "649:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "633:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "633:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 44,
                  "src": "484:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "483:27:3"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:3"
            },
            "scope": 131,
            "src": "472:204:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "714:162:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "732:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "749:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "749:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "732:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "724:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "724:44:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "786:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "786:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 57,
                            "name": "getEntranceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "799:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "799:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "786:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544821",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "817:17:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        },
                        "value": "Not enough ETH!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "778:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "778:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "858:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "858:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "845:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "845:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "845:24:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e97dcb62",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:2:3"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:3"
            },
            "scope": 131,
            "src": "682:194:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "938:324:3",
              "statements": [
                {
                  "assignments": [
                    null,
                    77,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 77,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 106,
                      "src": "951:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 76,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "951:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 81,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "973:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "973:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "948:58:3"
                },
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 106,
                      "src": "1016:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1016:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1048:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1040:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1040:14:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1057:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1061:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1057:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "1040:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1016:47:3"
                },
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "costToEnter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 106,
                      "src": "1167:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1167:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 103,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "usdEntryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1190:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1204:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1208:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1204:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1190:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 100,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1189:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 101,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1214:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1189:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1167:60:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 94,
                    "src": "1244:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "1237:18:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "09bc33a7",
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:2:3"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 107,
                  "src": "929:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "928:9:3"
            },
            "scope": 131,
            "src": "882:380:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "1309:174:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1340:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 114,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1357:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1357:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "1340:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e27742073746172742061206e6577206c6f747465727920796574",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1391:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e120aa22ebda653ae32eb3cc176c973cb8be3022fad78d923521de9f88e3d2ef",
                          "typeString": "literal_string \"Can't start a new lottery yet\""
                        },
                        "value": "Can't start a new lottery yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e120aa22ebda653ae32eb3cc176c973cb8be3022fad78d923521de9f88e3d2ef",
                          "typeString": "literal_string \"Can't start a new lottery yet\""
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1319:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:113:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 120,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1442:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1458:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1458:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "1442:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:34:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "160344e2",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 109,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 190,
                  "src": "1299:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1299:9:3"
              }
            ],
            "name": "startLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:2:3"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:3"
            },
            "scope": 131,
            "src": "1268:215:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1518:2:3",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "1593a8c7",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:2:3"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:3"
            },
            "scope": 131,
            "src": "1489:31:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 132,
        "src": "186:1336:3"
      }
    ],
    "src": "31:1492:3"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107923803806107928339818101604052602081101561003357600080fd5b5051600061003f6100ce565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506802b5e3af16b1880000600255600380546001600160a01b0319166001600160a01b038316178082556001919060ff60a01b1916600160a01b830217905550506100d2565b3390565b6106b1806100e16000396000f3fe6080604052600436106100915760003560e01c806388ab139a1161005957806388ab139a146101345780638da5cb5b14610149578063e97dcb621461017a578063f2fde38b14610182578063f71d96cb146101b557610091565b806309bc33a7146100965780631593a8c7146100bd578063160344e2146100d4578063715018a6146100e957806381447999146100fe575b600080fd5b3480156100a257600080fd5b506100ab6101df565b60408051918252519081900360200190f35b3480156100c957600080fd5b506100d261028d565b005b3480156100e057600080fd5b506100d261028f565b3480156100f557600080fd5b506100d261037e565b34801561010a57600080fd5b5061011361043c565b6040518082600281111561012357fe5b815260200191505060405180910390f35b34801561014057600080fd5b506100ab61044c565b34801561015557600080fd5b5061015e610452565b604080516001600160a01b039092168252519081900360200190f35b6100d2610461565b34801561018e57600080fd5b506100d2600480360360208110156101a557600080fd5b50356001600160a01b0316610516565b3480156101c157600080fd5b5061015e600480360360208110156101d857600080fd5b503561062a565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561023057600080fd5b505afa158015610244573d6000803e3d6000fd5b505050506040513d60a081101561025a57600080fd5b50602001516002549091506402540be4008202906000908290670de0b6b3a7640000028161028457fe5b04935050505090565b565b610297610651565b6001600160a01b03166102a8610452565b6001600160a01b031614610303576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600354600160a01b900460ff16600281111561031d57fe5b1461036f576040805162461bcd60e51b815260206004820152601d60248201527f43616e27742073746172742061206e6577206c6f747465727920796574000000604482015290519081900360640190fd5b6003805460ff60a01b19169055565b610386610651565b6001600160a01b0316610397610452565b6001600160a01b0316146103f2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600354600160a01b900460ff1681565b60025481565b6000546001600160a01b031690565b6000600354600160a01b900460ff16600281111561047b57fe5b1461048557600080fd5b61048d6101df565b3410156104d3576040805162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204554482160881b604482015290519081900360640190fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b61051e610651565b6001600160a01b031661052f610452565b6001600160a01b03161461058a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105cf5760405162461bcd60e51b81526004018080602001828103825260268152602001806106566026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001818154811061063757fe5b6000918252602090912001546001600160a01b0316905081565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220a0e68dceeaeaaa71016416c880b8d24cf7dd2c0f9a38e4cd72f2c0f4290c0b4764736f6c634300060c0033",
  "bytecodeSha1": "9b4482a41093849310e4406af1d00ea0e4017ee3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "15": [
            1297,
            1320,
            true
          ],
          "16": [
            2099,
            2121,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Lottery.enter": {
          "13": [
            732,
            767,
            true
          ],
          "14": [
            786,
            815,
            true
          ]
        },
        "Lottery.startLottery": {
          "12": [
            1340,
            1377,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "4": [
            1150,
            1163
          ]
        },
        "Ownable.renounceOwnership": {
          "2": [
            1781,
            1826
          ],
          "3": [
            1836,
            1855
          ]
        },
        "Ownable.transferOwnership": {
          "8": [
            2091,
            2164
          ],
          "9": [
            2174,
            2217
          ],
          "10": [
            2227,
            2244
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "11": [
            678,
            695
          ]
        }
      },
      "2": {},
      "3": {
        "Lottery.enter": {
          "5": [
            724,
            768
          ],
          "6": [
            778,
            835
          ],
          "7": [
            845,
            869
          ]
        },
        "Lottery.startLottery": {
          "0": [
            1319,
            1432
          ],
          "1": [
            1442,
            1476
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106100915760003560e01c806388ab139a1161005957806388ab139a146101345780638da5cb5b14610149578063e97dcb621461017a578063f2fde38b14610182578063f71d96cb146101b557610091565b806309bc33a7146100965780631593a8c7146100bd578063160344e2146100d4578063715018a6146100e957806381447999146100fe575b600080fd5b3480156100a257600080fd5b506100ab6101df565b60408051918252519081900360200190f35b3480156100c957600080fd5b506100d261028d565b005b3480156100e057600080fd5b506100d261028f565b3480156100f557600080fd5b506100d261037e565b34801561010a57600080fd5b5061011361043c565b6040518082600281111561012357fe5b815260200191505060405180910390f35b34801561014057600080fd5b506100ab61044c565b34801561015557600080fd5b5061015e610452565b604080516001600160a01b039092168252519081900360200190f35b6100d2610461565b34801561018e57600080fd5b506100d2600480360360208110156101a557600080fd5b50356001600160a01b0316610516565b3480156101c157600080fd5b5061015e600480360360208110156101d857600080fd5b503561062a565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561023057600080fd5b505afa158015610244573d6000803e3d6000fd5b505050506040513d60a081101561025a57600080fd5b50602001516002549091506402540be4008202906000908290670de0b6b3a7640000028161028457fe5b04935050505090565b565b610297610651565b6001600160a01b03166102a8610452565b6001600160a01b031614610303576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600354600160a01b900460ff16600281111561031d57fe5b1461036f576040805162461bcd60e51b815260206004820152601d60248201527f43616e27742073746172742061206e6577206c6f747465727920796574000000604482015290519081900360640190fd5b6003805460ff60a01b19169055565b610386610651565b6001600160a01b0316610397610452565b6001600160a01b0316146103f2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600354600160a01b900460ff1681565b60025481565b6000546001600160a01b031690565b6000600354600160a01b900460ff16600281111561047b57fe5b1461048557600080fd5b61048d6101df565b3410156104d3576040805162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204554482160881b604482015290519081900360640190fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b61051e610651565b6001600160a01b031661052f610452565b6001600160a01b03161461058a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105cf5760405162461bcd60e51b81526004018080602001828103825260268152602001806106566026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001818154811061063757fe5b6000918252602090912001546001600160a01b0316905081565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220a0e68dceeaeaaa71016416c880b8d24cf7dd2c0f9a38e4cd72f2c0f4290c0b4764736f6c634300060c0033",
  "deployedSourceMap": "186:1336:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:380;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1489:31;;;;;;;;;;;;;:::i;:::-;;1268:215;;;;;;;;;;;;;:::i;1717:145:0:-;;;;;;;;;;;;;:::i;431:34:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;258:26;;;;;;;;;;;;;:::i;1085:85:0:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:0;;;;;;;;;;;;;;682:194:3;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;220:32:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;220:32:3;;:::i;882:380::-;929:7;951:12;973:15;;;;;;;;;-1:-1:-1;;;;;973:15:3;-1:-1:-1;;;;;973:31:3;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;973:33:3;;;1190:11;;973:33;;-1:-1:-1;1057:6:3;1040:23;;;1016:21;;1040:23;;1204:6;1190:20;1040:23;1189:38;;;;;;-1:-1:-1;;;;882:380:3;:::o;1489:31::-;:::o;1268:215::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:20:3::1;1340:13;::::0;-1:-1:-1;;;1340:13:3;::::1;;;:37;::::0;::::1;;;;;;;1319:113;;;::::0;;-1:-1:-1;;;1319:113:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1442:13;:34:::0;;-1:-1:-1;;;;1442:34:3::1;::::0;;1268:215::o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;431:34:3:-;;;-1:-1:-1;;;431:34:3;;;;;:::o;258:26::-;;;;:::o;1085:85:0:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;682:194:3:-;749:18;732:13;;-1:-1:-1;;;732:13:3;;;;:35;;;;;;;;;724:44;;;;;;799:16;:14;:16::i;:::-;786:9;:29;;778:57;;;;;-1:-1:-1;;;778:57:3;;;;;;;;;;;;-1:-1:-1;;;778:57:3;;;;;;;;;;;;;;;845:7;:24;;;;;;;-1:-1:-1;845:24:3;;;;;;;;-1:-1:-1;;;;;;845:24:3;858:10;845:24;;;682:194::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;220:32:3:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;220:32:3;;-1:-1:-1;220:32:3;:::o;598:104:1:-;685:10;598:104;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    186,
    1522
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88AB139A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x1B5 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1593A8C7 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x81447999 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x28D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x28F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x37E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x123 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x44C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD2 PUSH2 0x461 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x516 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x62A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH5 0x2540BE400 DUP3 MUL SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x284 JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x297 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A8 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x303 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x31D JUMPI INVALID JUMPDEST EQ PUSH2 0x36F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742073746172742061206E6577206C6F747465727920796574000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x386 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x397 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x47B JUMPI INVALID JUMPDEST EQ PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48D PUSH2 0x1DF JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F7567682045544821 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x51E PUSH2 0x651 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52F PUSH2 0x452 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x656 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x637 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220A0E68DCEEAEA 0xAA PUSH18 0x16416C880B8D24CF7DD2C0F9A38E4CD72F2 0xC0 DELEGATECALL 0x29 0xC SIGNEXTEND SELFBALANCE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        186,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91"
    },
    "12": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x88AB139A"
    },
    "25": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x88AB139A"
    },
    "36": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x134"
    },
    "40": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "47": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x149"
    },
    "51": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE97DCB62"
    },
    "58": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A"
    },
    "62": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x182"
    },
    "73": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF71D96CB"
    },
    "80": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B5"
    },
    "84": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91"
    },
    "88": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "89": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9BC33A7"
    },
    "96": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x96"
    },
    "100": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1593A8C7"
    },
    "107": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD"
    },
    "111": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x160344E2"
    },
    "118": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD4"
    },
    "122": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "129": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE9"
    },
    "133": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81447999"
    },
    "140": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "EQ",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE"
    },
    "144": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "148": {
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "149": {
      "first_revert": true,
      "fn": null,
      "offset": [
        186,
        1522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "150": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "151": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "152": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "153": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "154": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2"
    },
    "157": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "160": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "161": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "162": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "163": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "POP",
      "path": "3"
    },
    "164": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "167": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF"
    },
    "170": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        882,
        1262
      ],
      "op": "JUMP",
      "path": "3"
    },
    "171": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "172": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "174": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "176": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "177": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "178": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "179": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "180": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "181": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "182": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "183": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "SUB",
      "path": "3"
    },
    "184": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "186": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "ADD",
      "path": "3"
    },
    "187": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "188": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "RETURN",
      "path": "3"
    },
    "189": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "190": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "191": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "DUP1",
      "path": "3"
    },
    "192": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "193": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC9"
    },
    "196": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "197": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "199": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "DUP1",
      "path": "3"
    },
    "200": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "REVERT",
      "path": "3"
    },
    "201": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "202": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "POP",
      "path": "3"
    },
    "203": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2"
    },
    "206": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28D"
    },
    "209": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        1489,
        1520
      ],
      "op": "JUMP",
      "path": "3"
    },
    "210": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "211": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "STOP",
      "path": "3"
    },
    "212": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "213": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "214": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "DUP1",
      "path": "3"
    },
    "215": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "216": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0"
    },
    "219": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "220": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "222": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "DUP1",
      "path": "3"
    },
    "223": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "REVERT",
      "path": "3"
    },
    "224": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "225": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "POP",
      "path": "3"
    },
    "226": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2"
    },
    "229": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28F"
    },
    "232": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        1268,
        1483
      ],
      "op": "JUMP",
      "path": "3"
    },
    "233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "235": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "237": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "240": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "241": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "243": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "REVERT",
      "path": "0"
    },
    "245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "POP",
      "path": "0"
    },
    "247": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2"
    },
    "250": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37E"
    },
    "253": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "254": {
      "offset": [
        431,
        465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "255": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "256": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "258": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A"
    },
    "261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "262": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP1",
      "path": "3"
    },
    "265": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "REVERT",
      "path": "3"
    },
    "266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "POP",
      "path": "3"
    },
    "268": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x113"
    },
    "271": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43C"
    },
    "274": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        431,
        465
      ],
      "op": "JUMP",
      "path": "3"
    },
    "275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP1",
      "path": "3"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP3",
      "path": "3"
    },
    "281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP2",
      "path": "3"
    },
    "284": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "GT",
      "path": "3"
    },
    "285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x123"
    },
    "289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "INVALID",
      "path": "3"
    },
    "291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "292": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP2",
      "path": "3"
    },
    "293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "296": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "ADD",
      "path": "3"
    },
    "297": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "298": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "POP",
      "path": "3"
    },
    "299": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "POP",
      "path": "3"
    },
    "300": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "302": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "303": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP1",
      "path": "3"
    },
    "304": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "305": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "SUB",
      "path": "3"
    },
    "306": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "307": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "RETURN",
      "path": "3"
    },
    "308": {
      "offset": [
        258,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "309": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "310": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "311": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "312": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "315": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "318": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "319": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "REVERT",
      "path": "3"
    },
    "320": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "321": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "POP",
      "path": "3"
    },
    "322": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "325": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44C"
    },
    "328": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        258,
        284
      ],
      "op": "JUMP",
      "path": "3"
    },
    "329": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "330": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "331": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "333": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "336": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "337": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "339": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "340": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "REVERT",
      "path": "0"
    },
    "341": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "POP",
      "path": "0"
    },
    "343": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15E"
    },
    "346": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x452"
    },
    "349": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "350": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "351": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "353": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "SHL"
    },
    "362": {
      "op": "SUB"
    },
    "363": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "364": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "365": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "AND",
      "path": "0"
    },
    "366": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP3",
      "path": "0"
    },
    "367": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "368": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "369": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "370": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP2",
      "path": "0"
    },
    "371": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "372": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SUB",
      "path": "0"
    },
    "373": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "375": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "ADD",
      "path": "0"
    },
    "376": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "377": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "RETURN",
      "path": "0"
    },
    "378": {
      "fn": "Lottery.enter",
      "offset": [
        682,
        876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "379": {
      "fn": "Lottery.enter",
      "offset": [
        682,
        876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2"
    },
    "382": {
      "fn": "Lottery.enter",
      "offset": [
        682,
        876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x461"
    },
    "385": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        682,
        876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "389": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "393": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "394": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "398": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "POP",
      "path": "0"
    },
    "400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2"
    },
    "403": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "SUB",
      "path": "0"
    },
    "408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "LT",
      "path": "0"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A5"
    },
    "416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "AND",
      "path": "0"
    },
    "433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x516"
    },
    "436": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "offset": [
        220,
        252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "439": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP1",
      "path": "3"
    },
    "440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1"
    },
    "444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP1",
      "path": "3"
    },
    "448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "REVERT",
      "path": "3"
    },
    "449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "POP",
      "path": "3"
    },
    "451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E"
    },
    "454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP1",
      "path": "3"
    },
    "457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "458": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "SUB",
      "path": "3"
    },
    "459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP2",
      "path": "3"
    },
    "462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "LT",
      "path": "3"
    },
    "463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D8"
    },
    "467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP1",
      "path": "3"
    },
    "471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "REVERT",
      "path": "3"
    },
    "472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "offset": [
        220,
        252
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62A"
    },
    "478": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        220,
        252
      ],
      "op": "JUMP",
      "path": "3"
    },
    "479": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "480": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        929,
        936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "482": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        951,
        963
      ],
      "op": "DUP1",
      "path": "3"
    },
    "483": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "485": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "487": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "488": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "489": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "490": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "493": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "EXP",
      "path": "3"
    },
    "494": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "495": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "DIV",
      "path": "3"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "502": {
      "op": "SHL"
    },
    "503": {
      "op": "SUB"
    },
    "504": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        988
      ],
      "op": "AND",
      "path": "3"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1004
      ],
      "op": "AND",
      "path": "3"
    },
    "514": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1004
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEAF968C"
    },
    "519": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "521": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "522": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP2",
      "path": "3"
    },
    "523": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "528": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "AND",
      "path": "3"
    },
    "529": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "531": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "SHL",
      "path": "3"
    },
    "532": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP2",
      "path": "3"
    },
    "533": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "534": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "536": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "ADD",
      "path": "3"
    },
    "537": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "539": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "541": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "542": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP1",
      "path": "3"
    },
    "543": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP4",
      "path": "3"
    },
    "544": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "SUB",
      "path": "3"
    },
    "545": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP2",
      "path": "3"
    },
    "546": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP7",
      "path": "3"
    },
    "547": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP1",
      "path": "3"
    },
    "548": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "549": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "550": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP1",
      "path": "3"
    },
    "551": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "552": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x230"
    },
    "555": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "556": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "558": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP1",
      "path": "3"
    },
    "559": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "REVERT",
      "path": "3"
    },
    "560": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "561": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "POP",
      "path": "3"
    },
    "562": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "GAS",
      "path": "3"
    },
    "563": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "564": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "565": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP1",
      "path": "3"
    },
    "566": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "567": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244"
    },
    "570": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "571": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "572": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "574": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP1",
      "path": "3"
    },
    "575": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "576": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "577": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "579": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "REVERT",
      "path": "3"
    },
    "580": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "581": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "POP",
      "path": "3"
    },
    "582": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "POP",
      "path": "3"
    },
    "583": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "POP",
      "path": "3"
    },
    "584": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "POP",
      "path": "3"
    },
    "585": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "587": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "588": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "589": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "591": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP2",
      "path": "3"
    },
    "592": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "LT",
      "path": "3"
    },
    "593": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "594": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A"
    },
    "597": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "598": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "600": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "DUP1",
      "path": "3"
    },
    "601": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "REVERT",
      "path": "3"
    },
    "602": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "603": {
      "op": "POP"
    },
    "604": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "606": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "ADD",
      "path": "3"
    },
    "607": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "608": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1190,
        1201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "610": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1190,
        1201
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "611": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "612": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        973,
        1006
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "613": {
      "op": "POP"
    },
    "614": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1057,
        1063
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x2540BE400"
    },
    "620": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1040,
        1063
      ],
      "op": "DUP3",
      "path": "3"
    },
    "621": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1040,
        1063
      ],
      "op": "MUL",
      "path": "3"
    },
    "622": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1040,
        1063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "623": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1016,
        1037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "625": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1016,
        1037
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "626": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1040,
        1063
      ],
      "op": "DUP3",
      "path": "3"
    },
    "627": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1040,
        1063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "628": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1204,
        1210
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "637": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1190,
        1210
      ],
      "op": "MUL",
      "path": "3"
    },
    "638": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1040,
        1063
      ],
      "op": "DUP2",
      "path": "3"
    },
    "639": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1189,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "642": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1189,
        1227
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "643": {
      "dev": "Division by zero",
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1189,
        1227
      ],
      "op": "INVALID",
      "path": "3"
    },
    "644": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1189,
        1227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "645": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1189,
        1227
      ],
      "op": "DIV",
      "path": "3"
    },
    "646": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1189,
        1227
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "647": {
      "op": "POP"
    },
    "648": {
      "op": "POP"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        882,
        1262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "652": {
      "fn": "Lottery.getEntranceFee",
      "jump": "o",
      "offset": [
        882,
        1262
      ],
      "op": "JUMP",
      "path": "3"
    },
    "653": {
      "fn": "Lottery.endLottery",
      "offset": [
        1489,
        1520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "654": {
      "fn": "Lottery.endLottery",
      "jump": "o",
      "offset": [
        1489,
        1520
      ],
      "op": "JUMP",
      "path": "3"
    },
    "655": {
      "fn": "Lottery.startLottery",
      "offset": [
        1268,
        1483
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "656": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297"
    },
    "659": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x651"
    },
    "662": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Lottery.startLottery",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "670": {
      "op": "SHL"
    },
    "671": {
      "op": "SUB"
    },
    "672": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "673": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "676": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x452"
    },
    "679": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "680": {
      "fn": "Lottery.startLottery",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "687": {
      "op": "SHL"
    },
    "688": {
      "op": "SUB"
    },
    "689": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "690": {
      "fn": "Lottery.startLottery",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "691": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x303"
    },
    "694": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "695": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "697": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "698": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "707": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "708": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "710": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "712": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "713": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "714": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "715": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "716": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "717": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "719": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "720": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "721": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "722": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "755": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "757": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "758": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "759": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "760": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "761": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "762": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "763": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "764": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "765": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "766": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "768": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "769": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "770": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "771": {
      "fn": "Lottery.startLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "772": {
      "fn": "Lottery.startLottery",
      "offset": [
        1357,
        1377
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x1"
    },
    "774": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "776": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1353
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "781": {
      "op": "SHL"
    },
    "782": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "783": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1353
      ],
      "op": "DIV",
      "path": "3"
    },
    "784": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "786": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1353
      ],
      "op": "AND",
      "path": "3"
    },
    "787": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "789": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "DUP2",
      "path": "3"
    },
    "790": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "GT",
      "path": "3"
    },
    "791": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "792": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31D"
    },
    "795": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "796": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "INVALID",
      "path": "3"
    },
    "797": {
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "798": {
      "branch": 12,
      "fn": "Lottery.startLottery",
      "offset": [
        1340,
        1377
      ],
      "op": "EQ",
      "path": "3"
    },
    "799": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36F"
    },
    "802": {
      "branch": 12,
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "803": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "805": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "DUP1",
      "path": "3"
    },
    "806": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "813": {
      "op": "SHL"
    },
    "814": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "DUP2",
      "path": "3"
    },
    "815": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "816": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "818": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "820": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "DUP3",
      "path": "3"
    },
    "821": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "ADD",
      "path": "3"
    },
    "822": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "823": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1D"
    },
    "825": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "827": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "DUP3",
      "path": "3"
    },
    "828": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "ADD",
      "path": "3"
    },
    "829": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "830": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x43616E27742073746172742061206E6577206C6F747465727920796574000000"
    },
    "863": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "865": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "DUP3",
      "path": "3"
    },
    "866": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "ADD",
      "path": "3"
    },
    "867": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "868": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "869": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "870": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "871": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "DUP2",
      "path": "3"
    },
    "872": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "873": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "SUB",
      "path": "3"
    },
    "874": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "876": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "ADD",
      "path": "3"
    },
    "877": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "878": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "REVERT",
      "path": "3"
    },
    "879": {
      "fn": "Lottery.startLottery",
      "offset": [
        1319,
        1432
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "880": {
      "fn": "Lottery.startLottery",
      "offset": [
        1442,
        1455
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x3"
    },
    "882": {
      "fn": "Lottery.startLottery",
      "offset": [
        1442,
        1476
      ],
      "op": "DUP1",
      "path": "3"
    },
    "883": {
      "fn": "Lottery.startLottery",
      "offset": [
        1442,
        1476
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "884": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "NOT"
    },
    "890": {
      "fn": "Lottery.startLottery",
      "offset": [
        1442,
        1476
      ],
      "op": "AND",
      "path": "3"
    },
    "891": {
      "fn": "Lottery.startLottery",
      "offset": [
        1442,
        1476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "892": {
      "fn": "Lottery.startLottery",
      "offset": [
        1442,
        1476
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "893": {
      "fn": "Lottery.startLottery",
      "jump": "o",
      "offset": [
        1268,
        1483
      ],
      "op": "JUMP",
      "path": "3"
    },
    "894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "895": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386"
    },
    "898": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x651"
    },
    "901": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "902": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "SUB"
    },
    "911": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "912": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "915": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x452"
    },
    "918": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "919": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "SUB"
    },
    "928": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "929": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "930": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F2"
    },
    "933": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "934": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "936": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "937": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "946": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "947": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "949": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "951": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "952": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "954": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "956": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "958": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "959": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "960": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "994": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "996": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "997": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "998": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "999": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1000": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1001": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1003": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1004": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "1005": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1007": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1008": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1009": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1010": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1011": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "1013": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1014": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1015": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1017": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1027": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1028": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "AND",
      "path": "0"
    },
    "1029": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1030": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1063": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1064": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1065": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1067": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1853,
        1854
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "1069": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1070": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "op": "SUB"
    },
    "1079": {
      "op": "NOT"
    },
    "1080": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "AND",
      "path": "0"
    },
    "1081": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1082": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1083": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1084": {
      "offset": [
        431,
        465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1085": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1087": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "offset": [
        431,
        465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1094": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DIV",
      "path": "3"
    },
    "1095": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1097": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "AND",
      "path": "3"
    },
    "1098": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        431,
        465
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1099": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        431,
        465
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1100": {
      "offset": [
        258,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1101": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1103": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1104": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        258,
        284
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1105": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        258,
        284
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1106": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1107": {
      "fn": "Ownable.owner",
      "offset": [
        1131,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1109": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 4
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "op": "SUB"
    },
    "1118": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "AND",
      "path": "0"
    },
    "1119": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1120": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1121": {
      "fn": "Lottery.enter",
      "offset": [
        682,
        876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1122": {
      "fn": "Lottery.enter",
      "offset": [
        749,
        767
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "1124": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        745
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1126": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1133": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        745
      ],
      "op": "DIV",
      "path": "3"
    },
    "1134": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        745
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1136": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        745
      ],
      "op": "AND",
      "path": "3"
    },
    "1137": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1139": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1140": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "GT",
      "path": "3"
    },
    "1141": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1142": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47B"
    },
    "1145": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1146": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1147": {
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1148": {
      "branch": 13,
      "fn": "Lottery.enter",
      "offset": [
        732,
        767
      ],
      "op": "EQ",
      "path": "3"
    },
    "1149": {
      "fn": "Lottery.enter",
      "offset": [
        724,
        768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x485"
    },
    "1152": {
      "branch": 13,
      "fn": "Lottery.enter",
      "offset": [
        724,
        768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1153": {
      "fn": "Lottery.enter",
      "offset": [
        724,
        768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1155": {
      "fn": "Lottery.enter",
      "offset": [
        724,
        768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1156": {
      "fn": "Lottery.enter",
      "offset": [
        724,
        768
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1157": {
      "fn": "Lottery.enter",
      "offset": [
        724,
        768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1158": {
      "fn": "Lottery.enter",
      "offset": [
        799,
        815
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x48D"
    },
    "1161": {
      "fn": "Lottery.enter",
      "offset": [
        799,
        813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF"
    },
    "1164": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        799,
        815
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1165": {
      "fn": "Lottery.enter",
      "offset": [
        799,
        815
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1166": {
      "fn": "Lottery.enter",
      "offset": [
        786,
        795
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1167": {
      "fn": "Lottery.enter",
      "offset": [
        786,
        815
      ],
      "op": "LT",
      "path": "3"
    },
    "1168": {
      "branch": 14,
      "fn": "Lottery.enter",
      "offset": [
        786,
        815
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1169": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D3"
    },
    "1172": {
      "branch": 14,
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1173": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1175": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1176": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1185": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1186": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1188": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1190": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1191": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "ADD",
      "path": "3"
    },
    "1192": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1193": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1195": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1197": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1198": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "ADD",
      "path": "3"
    },
    "1199": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1200": {
      "op": "PUSH15",
      "value": "0x4E6F7420656E6F7567682045544821"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1221": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1222": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "ADD",
      "path": "3"
    },
    "1223": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1224": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1225": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1226": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1227": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1228": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1229": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "SUB",
      "path": "3"
    },
    "1230": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1232": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "ADD",
      "path": "3"
    },
    "1233": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1234": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1235": {
      "fn": "Lottery.enter",
      "offset": [
        778,
        835
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1236": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        852
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x1"
    },
    "1238": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1239": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1240": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1241": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1242": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "ADD",
      "path": "3"
    },
    "1243": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1244": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1247": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1248": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1249": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1250": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1251": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "1284": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "ADD",
      "path": "3"
    },
    "1285": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1286": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "op": "SUB"
    },
    "1295": {
      "op": "NOT"
    },
    "1296": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "AND",
      "path": "3"
    },
    "1297": {
      "fn": "Lottery.enter",
      "offset": [
        858,
        868
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1298": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "OR",
      "path": "3"
    },
    "1299": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1300": {
      "fn": "Lottery.enter",
      "offset": [
        845,
        869
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1301": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        682,
        876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1303": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "1306": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x651"
    },
    "1309": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1320": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52F"
    },
    "1323": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x452"
    },
    "1326": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1334": {
      "op": "SHL"
    },
    "1335": {
      "op": "SUB"
    },
    "1336": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1337": {
      "branch": 15,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "1338": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58A"
    },
    "1341": {
      "branch": 15,
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1346": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1357": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1363": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1364": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1367": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1369": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "1413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 8
    },
    "1428": {
      "branch": 16,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CF"
    },
    "1432": {
      "branch": 16,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "1456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1458": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "1460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1466": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x656"
    },
    "1469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "1471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1473": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1476": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1477": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "1478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "1479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1481": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1484": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "1485": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1486": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1487": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1488": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "1490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1491": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1494": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "SUB"
    },
    "1503": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "AND",
      "path": "0"
    },
    "1506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1507": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "AND",
      "path": "0"
    },
    "1509": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1510": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2233
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "op": "NOT"
    },
    "1558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1565": {
      "op": "SHL"
    },
    "1566": {
      "op": "SUB"
    },
    "1567": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "1571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "OR",
      "path": "0"
    },
    "1575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1577": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1578": {
      "offset": [
        220,
        252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1582": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "LT",
      "path": "3"
    },
    "1586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x637"
    },
    "1589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1595": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1601": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "ADD",
      "path": "3"
    },
    "1603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "op": "SUB"
    },
    "1612": {
      "offset": [
        220,
        252
      ],
      "op": "AND",
      "path": "3"
    },
    "1613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        220,
        252
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "offset": [
        220,
        252
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1616": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        220,
        252
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1617": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1618": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 11
    },
    "1619": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1620": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "28273b641e839b0538b08c213b23498e6291249c",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Lottery is Ownable {\n    address payable[] public players;\n    uint256 public usdEntryFee;\n    AggregatorV3Interface internal ethUsdPriceFeed;\n    enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n\n    LOTTERY_STATE public lottery_state;\n\n    constructor(address _priceFeedAddress) public {\n        usdEntryFee = 50 * (10**18);\n        ethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress);\n        lottery_state = LOTTERY_STATE.CLOSED;\n    }\n\n    function enter() public payable {\n        require(lottery_state == LOTTERY_STATE.OPEN);\n        require(msg.value >= getEntranceFee(), \"Not enough ETH!\");\n        players.push(msg.sender);\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData();\n        uint256 adjustedPrice = uint256(price) * 10**10; // 18 decimals\n        // $50, $2,000 / ETH\n        // 50/2,000\n        // 50 * 100000 / 2000\n        uint256 costToEnter = (usdEntryFee * 10**18) / adjustedPrice;\n        return costToEnter;\n    }\n\n    function startLottery() public onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can't start a new lottery yet\"\n        );\n        lottery_state = LOTTERY_STATE.OPEN;\n    }\n\n    function endLottery() public {}\n}\n",
  "sourceMap": "186:1336:3:-:0;;;472:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;472:204:3;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;959:43;;926:6;;959:43;-1:-1:-1;542:13:3;528:11;:27;565:15;:58;;-1:-1:-1;;;;;;565:58:3;-1:-1:-1;;;;;565:58:3;;;;;;-1:-1:-1;;565:15:3;-1:-1:-1;;;;633:36:3;-1:-1:-1;;;;633:36:3;;;;;472:204;186:1336;;598:104:1;685:10;598:104;:::o;186:1336:3:-;;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}